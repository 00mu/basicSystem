(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{272:function(t,a,s){"use strict";s.r(a);var e=s(29),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"web-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-api"}},[t._v("#")]),t._v(" WEB-API")]),t._v(" "),s("p",[t._v("ECMA为 "),s("code",[t._v("JavaScript")]),t._v(" 提供了语法和一些原生的对象库，W3C标准提供了丰富的WEB接口供 "),s("code",[t._v("JavaScript")]),t._v(" 来调用在浏览器中进行各种操作。")]),t._v(" "),s("h2",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("p",[t._v("“文档对象模型”（Document Object Model），将网页转为一个 JavaScript 对象，将结构化的文档（HTML）解析成一系列节点组成一个树状结构（DOM Tree），所有节点和最终的树状结构都有规范的对外接口，从而可以用脚本进行各种操作。")]),t._v(" "),s("blockquote",[s("p",[t._v("节点（node）：DOM的最小组成单位。")])]),t._v(" "),s("blockquote",[s("p",[t._v("节点树（DOM Tree）：树是一种数据结构，根节点、父子节点、同级别节点构成， "),s("code",[t._v("document")]),t._v(" 是顶级节点代表整个文档树。")])]),t._v(" "),s("h3",{attrs:{id:"node-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-接口"}},[t._v("#")]),t._v(" Node 接口")]),t._v(" "),s("h4",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("p",[t._v("节点的7种类型，都继承了 node, 具有相同的属性和方法。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("节点")]),t._v(" "),s("th",[t._v("nodeType")]),t._v(" "),s("th",[t._v("nodeName")]),t._v(" "),s("th",[t._v("nodeValue")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("文档（document）")]),t._v(" "),s("td",[t._v("9")]),t._v(" "),s("td",[t._v("#document")]),t._v(" "),s("td",[t._v("null")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("元素（element）")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("大写的标签名")]),t._v(" "),s("td",[t._v("null")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("属性（attr）")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("属性的名称")]),t._v(" "),s("td",[t._v("前节点本身的文本值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("文本（text）")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("#text")]),t._v(" "),s("td",[t._v("前节点本身的文本值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("文档片断（DocumentFragment）")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("#document-fragment")]),t._v(" "),s("td",[t._v("null")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("文档类型（DocumentType）")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("文档的类型")]),t._v(" "),s("td",[t._v("null")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("注释（Comment）")]),t._v(" "),s("td",[t._v("8")]),t._v(" "),s("td",[t._v("#comment")]),t._v(" "),s("td",[t._v("前节点本身的文本值")]),t._v(" "),s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("其他属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("textContent")]),t._v(" "),s("td",[t._v("返回当前节点和它的所有后代节点的文本内容，可读写")])]),t._v(" "),s("tr",[s("td",[t._v("baseURI")]),t._v(" "),s("td",[t._v("当前网页的绝对路径(window.location)")])]),t._v(" "),s("tr",[s("td",[t._v("ownerDocument")]),t._v(" "),s("td",[t._v("返回当前节点所在的顶层文档对象，即document对象，document.ownerDocument 为null")])]),t._v(" "),s("tr",[s("td",[t._v("nextSibling")]),t._v(" "),s("td",[t._v("紧跟在当前节点后面的第一个同级节点，没有就返回null，该属性还包括文本节点和注释节点")])]),t._v(" "),s("tr",[s("td",[t._v("previousSibling")]),t._v(" "),s("td",[t._v("当前节点前面的、距离最近的一个同级节点")])]),t._v(" "),s("tr",[s("td",[t._v("parentNode")]),t._v(" "),s("td",[t._v("当前节点的父节点，元素节点、文档节点和文档片段节点其一")])]),t._v(" "),s("tr",[s("td",[t._v("parentElement")]),t._v(" "),s("td",[t._v("当前节点的父元素节点")])]),t._v(" "),s("tr",[s("td",[t._v("firstChild")]),t._v(" "),s("td",[t._v("当前节点的第一个子节点")])]),t._v(" "),s("tr",[s("td",[t._v("lastChild")]),t._v(" "),s("td",[t._v("属性返回当前节点的最后一个子节点")])]),t._v(" "),s("tr",[s("td",[t._v("childNodes")]),t._v(" "),s("td",[t._v("返回一个类似数组的对象（NodeList集合）, 包括当前节点的所有子节点")])]),t._v(" "),s("tr",[s("td",[t._v("isConnected")]),t._v(" "),s("td",[t._v("判断当前节点是否在文档之中，返回布尔值")])])])]),t._v(" "),s("h4",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("title")]),t._v(" "),s("th",[t._v("title")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("appendChild()")]),t._v(" "),s("td",[t._v("方法接受一个节点对象作为参数，将其作为最后一个子节点，插入当前节点；如果参数节点是 DOM 已经存在的节点，appendChild()方法会将其从原来的位置，移动到新位置。")])]),t._v(" "),s("tr",[s("td",[t._v("hasChildNodes()")]),t._v(" "),s("td",[t._v("返回一个布尔值，表示当前节点是否有子节点")])]),t._v(" "),s("tr",[s("td",[t._v("cloneNode()")]),t._v(" "),s("td",[t._v("用于克隆一个节点。它接受一个布尔值作为参数，表示是否同时克隆子节点。它的返回值是一个克隆出来的新节点。")])]),t._v(" "),s("tr",[s("td",[t._v("insertBefore()")]),t._v(" "),s("td",[t._v("parentNode.insertBefore(newNode, referenceNode), 插入到指定位置，第一个参数是所要插入的节点newNode，第二个参数是父节点parentNode内部的一个子节点referenceNode")])]),t._v(" "),s("tr",[s("td",[t._v("removeChild()")]),t._v(" "),s("td",[t._v("从当前节点移除该子节点，如果参数节点不是当前节点的子节点，removeChild方法将报错")])]),t._v(" "),s("tr",[s("td",[t._v("replaceChild()")]),t._v(" "),s("td",[t._v("div1.parentNode.replaceChild(newChild, div1), 替换当前节点的某一个子节点")])]),t._v(" "),s("tr",[s("td",[t._v("contains()")]),t._v(" "),s("td",[t._v("是否包含参数节点，1. 参数节点为当前节点2. 参数节点为当前节点的子节点3. 参数节点为当前节点的后代节点")])]),t._v(" "),s("tr",[s("td",[t._v("compareDocumentPosition()")]),t._v(" "),s("td",[t._v("用法与contains方法完全一致，返回一个六个比特位的二进制值，表示参数节点与当前节点的关系")])]),t._v(" "),s("tr",[s("td",[t._v("isEqualNode()")]),t._v(" "),s("td",[t._v("返回一个布尔值，用于检查两个节点是否相等。所谓相等的节点，指的是两个节点的类型相同、属性相同、子节点相同")])]),t._v(" "),s("tr",[s("td",[t._v("isSameNode()")]),t._v(" "),s("td",[t._v("表示两个节点是否为同一个节点，相同必然相等，反之则不")])]),t._v(" "),s("tr",[s("td",[t._v("normalize()")]),t._v(" "),s("td",[t._v("用于清理当前节点内部的所有文本节点")])]),t._v(" "),s("tr",[s("td",[t._v("getRootNode()")]),t._v(" "),s("td",[t._v("与ownerDocument属性的作用相同")])])])]),t._v(" "),s("h3",{attrs:{id:"nodelist-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-接口"}},[t._v("#")]),t._v(" NodeList 接口")]),t._v(" "),s("p",[t._v("NodeList实例是一个类似数组的对象，它的成员是节点对象。通过以下方法可以得到NodeList实例")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.childNodes")])]),t._v(" "),s("li",[s("code",[t._v("document.querySelectorAll()")]),t._v(" 等节点搜索方法")])]),t._v(" "),s("p",[t._v("可以使用length属性和forEach方法。NodeList 实例可能是动态集合，也可能是静态集合。所谓动态集合就是一个活的集合，DOM 删除或新增一个相关节点，都会立刻反映在 NodeList 实例。目前，只有Node.childNodes返回的是一个动态集合，其他的 NodeList 都是静态集合")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("length")]),t._v(" "),s("td",[t._v("返回 NodeList 实例包含的节点数量")])]),t._v(" "),s("tr",[s("td",[t._v("forEach()")]),t._v(" "),s("td",[t._v("遍历 NodeList 的所有成员，用法与数组实例的forEach方法完全一致")])]),t._v(" "),s("tr",[s("td",[t._v("item()")]),t._v(" "),s("td",[t._v("方法接受一个整数值作为参数，表示成员的位置，返回该位置上的成员")])]),t._v(" "),s("tr",[s("td",[t._v("keys()")]),t._v(" "),s("td",[t._v("这三个方法都返回一个 ES6 的遍历器对象，可以通过for... of循环遍历获取每一个成员的信息；返回键名的遍历器")])]),t._v(" "),s("tr",[s("td",[t._v("values()")]),t._v(" "),s("td",[t._v("返回键值的遍历器")])]),t._v(" "),s("tr",[s("td",[t._v("entries()")]),t._v(" "),s("td",[t._v("返回的遍历器同时包含键名和键值的信息")])])])]),t._v(" "),s("h3",{attrs:{id:"htmlcollection-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htmlcollection-接口"}},[t._v("#")]),t._v(" HTMLCollection 接口")]),t._v(" "),s("p",[t._v("是一个节点对象的集合，只能包含元素节点（element），不能包含其他类型的节点。它的返回值是一个类似数组的对象，但是与NodeList接口不同，HTMLCollection没有forEach方法，只能使用for循环遍历。")]),t._v(" "),s("p",[t._v("返回HTMLCollection实例的，主要是一些Document对象的集合属性，比如 "),s("code",[t._v("document.links")]),t._v(" 、 "),s("code",[t._v("document.forms")]),t._v(" 、 "),s("code",[t._v("document.images")]),t._v(" 等，见节点集合属性。")]),t._v(" "),s("p",[t._v("HTMLCollection实例都是动态集合，节点的变化会实时反映在集合中")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("length")]),t._v(" "),s("td",[t._v("返回 HTMLCollection 实例包含的成员数量")])]),t._v(" "),s("tr",[s("td",[t._v("item()")]),t._v(" "),s("td",[t._v("接受一个整数值作为参数，表示成员的位置，返回该位置上的成员")])]),t._v(" "),s("tr",[s("td",[t._v("namedItem()")]),t._v(" "),s("td",[t._v("方法的参数是一个字符串，表示id属性或name属性的值，返回对应的元素节点")])])])]),t._v(" "),s("h3",{attrs:{id:"parentnode-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parentnode-接口"}},[t._v("#")]),t._v(" ParentNode  接口")]),t._v(" "),s("p",[t._v("ParentNode 接口表示当前节点是一个父节点，提供一些处理子节点的方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("children()")]),t._v(" "),s("td",[t._v("返回一个HTMLCollection实例，成员是当前节点的所有元素子节点。该属性只读")])]),t._v(" "),s("tr",[s("td",[t._v("firstElementChild()")]),t._v(" "),s("td",[t._v("返回当前节点的第一个元素子节点。如果没有任何元素子节点，则返回null")])]),t._v(" "),s("tr",[s("td",[t._v("lastElementChild()")]),t._v(" "),s("td",[t._v("返回当前节点的最后一个元素子节点，如果不存在任何元素子节点，则返回null")])]),t._v(" "),s("tr",[s("td",[t._v("childElementCount()")]),t._v(" "),s("td",[t._v("返回一个整数，表示当前节点的所有元素子节点的数目。如果不包含任何元素子节点，则返回0")])]),t._v(" "),s("tr",[s("td",[t._v("append()")]),t._v(" "),s("td",[t._v("为当前节点追加一个或多个子节点，位置是最后一个元素子节点的后面；不仅可以添加元素子节点，还可以添加文本子节点")])]),t._v(" "),s("tr",[s("td",[t._v("prepend()")]),t._v(" "),s("td",[t._v("为当前节点追加一个或多个子节点，位置是第一个元素子节点的前面；不仅可以添加元素子节点，还可以添加文本子节点")])])])]),t._v(" "),s("h3",{attrs:{id:"childnode-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-接口"}},[t._v("#")]),t._v(" ChildNode 接口")]),t._v(" "),s("p",[t._v("如果一个节点有父节点，那么该节点就拥有了ChildNode接口。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("el.remove()")]),t._v(" "),s("td",[t._v("从父节点移除当前节点")])]),t._v(" "),s("tr",[s("td",[t._v("el.defore(a, b)")]),t._v(" "),s("td",[t._v("用于在当前节点的前面，插入一个或多个同级节点。两者拥有相同的父节点")])]),t._v(" "),s("tr",[s("td",[t._v("el.after(a, b)")]),t._v(" "),s("td",[t._v("用于在当前节点的后面，插入一个或多个同级节点。两者拥有相同的父节点")])]),t._v(" "),s("tr",[s("td",[t._v("el.replaceWith(a)")]),t._v(" "),s("td",[t._v("用参数节点，替换当前节点")])])])]),t._v(" "),s("h3",{attrs:{id:"childnode-接口-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#childnode-接口-2"}},[t._v("#")]),t._v(" ChildNode 接口")]),t._v(" "),s("p",[t._v("ChildNode 接口表示当前节点是一个子节点，提供一些相关方法")]),t._v(" "),s("h3",{attrs:{id:"document-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-节点"}},[t._v("#")]),t._v(" Document 节点")]),t._v(" "),s("p",[t._v("document节点对象代表整个文档，每张网页都有自己的document对象。window.document属性就指向这个对象。只要浏览器开始载入 HTML 文档，该对象就存在了，可以直接使用。")]),t._v(" "),s("p",[t._v("document对象有不同的办法可以获取。")]),t._v(" "),s("ul",[s("li",[t._v("正常的网页，直接使用document或window.document。")]),t._v(" "),s("li",[t._v("iframe框架里面的网页，使用iframe节点的contentDocument属性。")]),t._v(" "),s("li",[t._v("Ajax 操作返回的文档，使用XMLHttpRequest对象的responseXML属性。")]),t._v(" "),s("li",[t._v("内部节点的ownerDocument属性。")])]),t._v(" "),s("p",[t._v("document对象继承了EventTarget接口和Node接口，并且混入（mixin）了ParentNode接口。这意味着，这些接口的方法都可以在document对象上调用。除此之外，document对象还有很多自己的属性和方法。")]),t._v(" "),s("h4",{attrs:{id:"document-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-属性"}},[t._v("#")]),t._v(" Document 属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("快捷属性")]),t._v(" "),s("td",[t._v("指向文档内部的某个节点的快捷方式")])]),t._v(" "),s("tr",[s("td",[t._v("document.defaultView")]),t._v(" "),s("td",[t._v("返回document对象所属的window对象")])]),t._v(" "),s("tr",[s("td",[t._v("document.doctype")]),t._v(" "),s("td",[t._v("指向 "),s("code",[t._v("<DOCTYPE>")]),t._v(" 节点，即文档类型（Document Type Declaration，简写DTD）节点。HTML 的文档类型节点，一般写成 "),s("code",[t._v("<!DOCTYPE html>")])])]),t._v(" "),s("tr",[s("td",[t._v("document.documentElement")]),t._v(" "),s("td",[t._v("指向 "),s("code",[t._v("<html>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.body")]),t._v(" "),s("td",[t._v("指向 "),s("code",[t._v("<body>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.head")]),t._v(" "),s("td",[t._v("指向 "),s("code",[t._v("<head>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.scrollingElement")]),t._v(" "),s("td",[t._v("返回文档的滚动元素。滚动到顶部 "),s("code",[t._v("document.scrollingElement.scrollTop = 0")])])]),t._v(" "),s("tr",[s("td",[t._v("document.activeElement")]),t._v(" "),s("td",[t._v("返回获得当前焦点（focus）的 DOM 元素，通常，这个属性返回的是 "),s("code",[t._v("<input>、<textarea>、<select>")]),t._v(" 等表单元素，如果当前没有焦点元素，返回 "),s("code",[t._v("<body>")]),t._v(" 元素或null")])]),t._v(" "),s("tr",[s("td",[t._v("document.fullscreenElement")]),t._v(" "),s("td",[t._v("返回document对象所属的window对象")])]),t._v(" "),s("tr",[s("td",[t._v("document.defaultView")]),t._v(" "),s("td",[t._v("返回当前以全屏状态展示的 DOM 元素。如果不是全屏状态，该属性返回null")])]),t._v(" "),s("tr",[s("td",[t._v("节点集合属性")]),t._v(" "),s("td",[t._v("处了document.styleSheets返回一个HTMLCollection实例 ，表示文档内部特定元素的集合")])]),t._v(" "),s("tr",[s("td",[t._v("document.links")]),t._v(" "),s("td",[t._v("返回当前文档所有设定了href属性的 "),s("code",[t._v("<a>")]),t._v(" 及 "),s("code",[t._v("<area>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.forms")]),t._v(" "),s("td",[t._v("所有 "),s("code",[t._v("<form>")]),t._v(" 表单节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.images")]),t._v(" "),s("td",[t._v("所有 "),s("code",[t._v("<img>")]),t._v(" 图片节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.embeds")]),t._v(" "),s("td",[t._v("和document.plugins属性，都返回所有 "),s("code",[t._v("<embed>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.scripts")]),t._v(" "),s("td",[t._v("返回所有 "),s("code",[t._v("<script>")]),t._v(" 节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.styleSheets")]),t._v(" "),s("td",[t._v("返回文档内嵌或引入的样式表集合")])]),t._v(" "),s("tr",[s("td",[t._v("静态信息属性")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("document.documentURI")]),t._v(" "),s("td",[t._v("当前文档的网址，继承自Document接口，可用于所有文档")])]),t._v(" "),s("tr",[s("td",[t._v("document. URL")]),t._v(" "),s("td",[t._v("当前文档的网址，继承自HTMLDocument接口，只能用于 HTML 文档")])]),t._v(" "),s("tr",[s("td",[t._v("document.document.domain")]),t._v(" "),s("td",[t._v("返回当前文档的域名，不包含协议和端口")])]),t._v(" "),s("tr",[s("td",[t._v("document.document.location")]),t._v(" "),s("td",[t._v("浏览器提供的原生对象，提供 URL 相关的信息和操作方法。通过window.location和document.location属性，可以拿到这个对象")])]),t._v(" "),s("tr",[s("td",[t._v("document.lastModified")]),t._v(" "),s("td",[t._v("返回一个字符串，表示当前文档最后修改的时间。不同浏览器的返回值，日期格式是不一样的")])]),t._v(" "),s("tr",[s("td",[t._v("document.title")]),t._v(" "),s("td",[t._v("返回当前文档的标题。默认情况下，返回 "),s("code",[t._v("<title>")]),t._v(" 节点的值。但是该属性是可写的，一旦被修改，就返回修改后的值")])]),t._v(" "),s("tr",[s("td",[t._v("document.characterSet")]),t._v(" "),s("td",[t._v("当前文档的编码，比如UTF-8、ISO-8859-1等等")])]),t._v(" "),s("tr",[s("td",[t._v("document.referrer")]),t._v(" "),s("td",[t._v("返回一个字符串，表示当前文档的访问者来自哪里，")])]),t._v(" "),s("tr",[s("td",[t._v("document.compatMode")]),t._v(" "),s("td",[t._v("返回浏览器处理文档的模式，可能的值为BackCompat（向后兼容模式）和CSS1Compat（严格模式）；如果网页代码的第一行设置了明确的DOCTYPE（比如<!doctype html>），document.compatMode的值都为CSS1Compat")])]),t._v(" "),s("tr",[s("td",[t._v("文档状态属性")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("document.hidden")]),t._v(" "),s("td",[t._v("返回一个布尔值，表示当前页面是否可见。如果窗口最小化、浏览器切换了 Tab，都会导致导致页面不可见，使得document.hidden返回true")])]),t._v(" "),s("tr",[s("td",[t._v("document.document.visibilityState")]),t._v(" "),s("td",[t._v("返回文档的可见状态:1.visible：页面可见。注意，页面可能是部分可见，即不是焦点窗口，前面被其他窗口部分挡住了。 2.hidden：页面不可见，有可能窗口最小化，或者浏览器切换到了另一个 Tab。3.prerender：页面处于正在渲染状态，对于用户来说，该页面不可见。4.unloaded：页面从内存里面卸载了")])]),t._v(" "),s("tr",[s("td",[t._v("document.readyState")]),t._v(" "),s("td",[t._v("浏览器开始解析 HTML 文档，document.readyState属性等于loading。浏览器遇到 HTML 文档中的 "),s("code",[t._v("<script>")]),t._v(" 元素，并且没有async或defer属性，就暂停解析，开始执行脚本，这时document.readyState属性还是等于loading。HTML 文档解析完成，document.readyState属性变成interactive。浏览器等待图片、样式表、字体文件等外部资源加载完成，一旦全部加载完成，document.readyState属性变成complete。每次都会触发一个readystatechange事件。")])]),t._v(" "),s("tr",[s("td",[t._v("document.cookie")]),t._v(" "),s("td",[t._v("用来操作浏览器 Cookie")])]),t._v(" "),s("tr",[s("td",[t._v("document.implementation")]),t._v(" "),s("td",[t._v("该对象有三个方法，主要用于创建独立于当前文档的新的 Document 对象。DOMImplementation.createDocument()：创建一个 XML 文档。DOMImplementation.createHTMLDocument()：创建一个 HTML 文档。DOMImplementation.createDocumentType()：创建一个 DocumentType 对象。")])])])]),t._v(" "),s("h4",{attrs:{id:"document-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-方法"}},[t._v("#")]),t._v(" Document 方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("querySelector 系列")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("document.querySelector()")]),t._v(" "),s("td",[t._v("接受一个 CSS 选择器作为参数，返回匹配该选择器的元素节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.querySelectorAll()")]),t._v(" "),s("td",[t._v("与querySelector用法类似，区别是返回一个NodeList对象，包含所有匹配给定选择器的节点。两个方法都支持多个及复杂选择器。All的返回结果"),s("strong",[t._v("不是动态集合")]),t._v("，不会实时反映元素节点的变化。")])]),t._v(" "),s("tr",[s("td",[t._v("getElement 系列")]),t._v(" "),s("td",[t._v("getElements 返回结果是数组，是动态的")])]),t._v(" "),s("tr",[s("td",[t._v("document.getElementsByTagName()")]),t._v(" "),s("td",[t._v("返回符合条件的所有元素，可以实时反映 HTML 文档的变化")])]),t._v(" "),s("tr",[s("td",[t._v("document.getElementsByClassName()")]),t._v(" "),s("td",[t._v("返回一个类似数组的对象（HTMLCollection实例），包括了所有class名字符合指定条件的元素，元素的变化实时反映在返回结果中")])]),t._v(" "),s("tr",[s("td",[t._v("document.getElementsByName()")]),t._v(" "),s("td",[t._v("也是一个集合，拥有name属性的 HTML 元素")])]),t._v(" "),s("tr",[s("td",[t._v("document.getElementById()")]),t._v(" "),s("td",[t._v("匹配指定id属性的元素节点，document.getElementById()比document.querySelector()效率高得多")])]),t._v(" "),s("tr",[s("td",[t._v("create 系列")]),t._v(" "),s("td",[t._v("生成节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createTextNode()")]),t._v(" "),s("td",[t._v("法用来生成文本节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createAttribute()")]),t._v(" "),s("td",[t._v("法用来生成属性节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createComment()")]),t._v(" "),s("td",[t._v("法用来生成注释节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createDocumentFragment()")]),t._v(" "),s("td",[t._v("生成一个空的文档片段对象， 是一个存在于内存的 DOM 片段，不属于当前文档，常常用来生成一段较复杂的 DOM 结构，然后再插入当前文档。对它的任何改动，都不会引发网页的重新渲染，比直接修改当前文档的 DOM 有更好的性能表现")])]),t._v(" "),s("tr",[s("td",[t._v("document.createEvent()")]),t._v(" "),s("td",[t._v("生成一个事件对象（Event实例），该对象可以被element.dispatchEvent方法使用，触发指定事件")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("document.hasFocus()")]),t._v(" "),s("td",[t._v("当前文档之中是否有元素被激活或获得焦点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createAttribute()")]),t._v(" "),s("td",[t._v("法用来生成属性节点")])]),t._v(" "),s("tr",[s("td",[t._v("document.createAttribute()")]),t._v(" "),s("td",[t._v("法用来生成属性节点")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("document.open()")]),t._v(" "),s("td",[t._v("方法清除当前文档所有内容，使得文档处于可写状态，供document.write方法写入内容")])]),t._v(" "),s("tr",[s("td",[t._v("ocument.close()")]),t._v(" "),s("td",[t._v("用来关闭document.open()打开的文档")])]),t._v(" "),s("tr",[s("td",[t._v("document.write()")]),t._v(" "),s("td",[t._v("方法用于向当前文档写入内容, 会当作 HTML 代码解析，不会转义。推荐使用对innerHTML属性赋值")])]),t._v(" "),s("tr",[s("td",[t._v("document.writeln()")]),t._v(" "),s("td",[t._v("与write方法完全一致，除了会在输出内容的尾部添加换行符")])])])]),t._v(" "),s("h3",{attrs:{id:"element-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-节点"}},[t._v("#")]),t._v(" Element 节点")]),t._v(" "),s("p",[t._v("每一个 HTML 元素，在 DOM 树上都会转化成一个Element节点对象（以下简称元素节点）。Element对象继承了Node接口，因此Node的属性和方法在Element对象都存在。此外，不同的 HTML 元素对应的元素节点是不一样的，浏览器使用不同的构造函数，生成不同的元素节点，比如 "),s("code",[t._v("<a>")]),t._v(" 元素的节点对象由HTMLAnchorElement构造函数生成， "),s("code",[t._v("<button>")]),t._v(" 元素的节点对象由HTMLButtonElement构造函数生成。因此，元素节点不是一种对象，而是一组对象，这些对象除了继承Element的属性和方法，还有各自构造函数的属性和方法。")]),t._v(" "),s("p",[t._v("属性和方法太多了，挑拣一些写一下。")]),t._v(" "),s("h4",{attrs:{id:"实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("title")]),t._v(" "),s("th",[t._v("title")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("元素特性")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("id, tagName, accessKey, draggable, lang, tabIndex, title")]),t._v(" "),s("td",[t._v("获取或者改写元素的id、标签、快捷键啊什么的")])]),t._v(" "),s("tr",[s("td",[t._v("元素状态的相关")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.hidden")]),t._v(" "),s("td",[t._v("控制当前元素是否可见，并不能读取css设置不可见")])]),t._v(" "),s("tr",[s("td",[t._v("el.contentEditable")]),t._v(" "),s("td",[t._v("素可以设置contentEditable属性，使得元素的内容可以编辑")])]),t._v(" "),s("tr",[s("td",[t._v("el.attributes")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.className，el.classList")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.dataset")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.innerHTML")]),t._v(" "),s("td",[t._v("返回一个字符串，等同于该元素包含的所有 HTML 代码。该属性可读写，常用来设置某个节点的内容。它能改写所有元素节点的内容，包括 "),s("code",[t._v("<HTML>")]),t._v(" 和 "),s("code",[t._v("<body>")]),t._v(" 元素，有安全风险，如果是文本最好使用 textContent")])]),t._v(" "),s("tr",[s("td",[t._v("el.outerHTML")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.clientHeight，el.clientWidth")]),t._v(" "),s("td",[t._v("返回块级元素的CSS宽高（包括padding，减去滚动条），如果css设置了高度则为设置的值否则为实际块的宽高，document.documentElement.clientHeight 浏览器窗口的高度(不包含滚动条，window.innerHeight 包括滚动条)，document.body.clientHeight 页面文档流的实际高度")])]),t._v(" "),s("tr",[s("td",[t._v("el.clientLeft，el.clientTop")]),t._v(" "),s("td",[t._v("返回左边框、右边框的css大小")])]),t._v(" "),s("tr",[s("td",[t._v("el.scrollHeight，el.scrollWidth")]),t._v(" "),s("td",[t._v("当前元素的总高度（单位像素），包括溢出容器、当前不可见的部分。它包括padding，但是不包括border、margin以及水平滚动条的高度（如果有水平滚动条的话），还包括伪元素（::before或::after）的高度，只可读，整张网页的总高度可以从document.documentElement或document.body上读取")])]),t._v(" "),s("tr",[s("td",[t._v("el.scrollLeft，el.scrollTop")]),t._v(" "),s("td",[t._v("当前元素的水平滚动条向右侧滚动的像素数量，整张网页用document.documentElement.scrollLeft")])]),t._v(" "),s("tr",[s("td",[t._v("el.offsetParent")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.offsetHeight，el.offsetWidth")]),t._v(" "),s("td",[t._v("包括border和padding和滚动条")])]),t._v(" "),s("tr",[s("td",[t._v("el.offsetLeft，el.offsetTop")]),t._v(" "),s("td",[t._v("相对于父节（position）点的位移")])]),t._v(" "),s("tr",[s("td",[t._v("el.style")]),t._v(" "),s("td",[t._v("每个元素节点都有style用来读写该元素的行内样式信息")])]),t._v(" "),s("tr",[s("td",[t._v("el.children，el.childelCount")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.firstelChild，el.lastelChild")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("el.nextelSibling，el.previouselSibling")]),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),s("p",[t._v("补充几个常见的。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("title")]),t._v(" "),s("th",[t._v("title")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("el.scrollIntoView()")]),t._v(" "),s("td",[t._v("滚动当前元素，进入浏览器的可见区域。参数默认true：顶部对齐, false 底部对齐")])]),t._v(" "),s("tr",[s("td",[t._v("el.getBoundingClientRect()")]),t._v(" "),s("td",[t._v("提供当前元素节点的大小、位置等信息，基本上就是 CSS 盒状模型的所有信息")])]),t._v(" "),s("tr",[s("td",[t._v("el.getClientRects()")]),t._v(" "),s("td",[t._v("返回一个类似数组的对象，里面是当前元素在页面上形成的所有矩形。对于行内元素就是多个矩形了")])])])]),t._v(" "),s("ul",[s("li",[t._v("el.getBoundingClientRect()，方法的所有属性，都把边框（border属性）算作元素的一部分。也就是说，都是从边框外缘的各个点来计算。因此，width和height包括了元素本身 + padding + border\n"),s("ul",[s("li",[t._v("x：元素左上角相对于视口的横坐标")]),t._v(" "),s("li",[t._v("y：元素左上角相对于视口的纵坐标")]),t._v(" "),s("li",[t._v("height：元素高度")]),t._v(" "),s("li",[t._v("width：元素宽度")]),t._v(" "),s("li",[t._v("left：元素左上角相对于视口的横坐标，与x属性相等")]),t._v(" "),s("li",[t._v("right：元素右边界相对于视口的横坐标（等于x + width）")]),t._v(" "),s("li",[t._v("top：元素顶部相对于视口的纵坐标，与y属性相等")]),t._v(" "),s("li",[t._v("bottom：元素底部相对于视口的纵坐标（等于y + height）")]),t._v(" "),s("li",[t._v("由于元素相对于视口（viewport）的位置，会随着页面滚动变化，因此表示位置的四个属性值，都不是固定不变的。如果想得到绝对位置，可以将left属性加上window.scrollX，top属性加上window.scrollY")])])])]),t._v(" "),s("h3",{attrs:{id:"属性的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性的操作"}},[t._v("#")]),t._v(" 属性的操作")]),t._v(" "),s("p",[t._v("HTML 元素的属性名是大小写不敏感的，但是 JavaScript 对象的属性名是大小写敏感的。转换规则是，转为 JavaScript 属性名时，一律采用小写。如果属性名包括多个单词，则采用骆驼拼写法，即从第二个单词开始，每个单词的首字母采用大写，比如onClick")]),t._v(" "),s("ul",[s("li",[t._v("Element.attributes 属性")]),t._v(" "),s("li",[t._v("元素的标准属性")]),t._v(" "),s("li",[t._v("Element.getAttribute()")]),t._v(" "),s("li",[t._v("Element.getAttributeNames()")]),t._v(" "),s("li",[t._v("Element.setAttribute()")]),t._v(" "),s("li",[t._v("Element.hasAttribute()")]),t._v(" "),s("li",[t._v("Element.hasAttributes()")]),t._v(" "),s("li",[t._v("Element.removeAttribute()")]),t._v(" "),s("li",[t._v("dataset 属性")])]),t._v(" "),s("h3",{attrs:{id:"text-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-节点"}},[t._v("#")]),t._v(" Text 节点")]),t._v(" "),s("p",[t._v("Text 节点的概念\nText 节点的属性\ndata\nwholeText\nlength\nnextElementSibling，previousElementSibling\nText 节点的方法\nappendData()，deleteData()，insertData()，replaceData()，subStringData()\nremove()\nsplitText()")]),t._v(" "),s("h3",{attrs:{id:"documentfragment-文档片段节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment-文档片段节点"}},[t._v("#")]),t._v(" DocumentFragment 文档片段节点")]),t._v(" "),s("p",[t._v("DocumentFragment节点代表一个文档的片段，本身就是一个完整的 DOM 树形结构。它没有父节点，parentNode返回null，但是可以插入任意数量的子节点。它不属于当前文档，操作DocumentFragment节点，要比直接操作 DOM 树快得多。")]),t._v(" "),s("p",[t._v("注意，DocumentFragment节点本身不能被插入当前文档。当它作为appendChild()、insertBefore()、replaceChild()等方法的参数时，是它的所有子节点插入当前文档，而不是它自身。一旦DocumentFragment节点被添加进当前文档，它自身就变成了空节点（textContent属性为空字符串），可以被再次使用。如果想要保存DocumentFragment节点的内容，可以使用cloneNode方法。")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反转指点节点的所有子节点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"css-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-操作"}},[t._v("#")]),t._v(" CSS 操作")]),t._v(" "),s("p",[t._v("如何通过 JavaScript 操作 CSS。")]),t._v(" "),s("h4",{attrs:{id:"html-元素的-style-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-元素的-style-属性"}},[t._v("#")]),t._v(" HTML 元素的 style 属性")]),t._v(" "),s("p",[t._v("操作 CSS 样式最简单的方法，就是使用网页元素节点的getAttribute()方法、setAttribute()方法和removeAttribute()方法，直接读写或删除网页元素的style属性")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color:red;'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border:1px solid black;'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"cssstyledeclaration-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cssstyledeclaration-接口"}},[t._v("#")]),t._v(" CSSStyleDeclaration 接口")]),t._v(" "),s("p",[t._v("CSSStyleDeclaration 接口可以直接读写 CSS 的样式属性。style属性是一个 CSSStyleDeclaration 的实例，对象所包含的属性与 CSS 规则一一对应。写法需要遵循一定的规则：")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("divStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("连词号需要变成骆驼拼写法，如 background-color写成backgroundColor")]),t._v(" "),s("li",[t._v("CSS 属性名是 JavaScript 保留字，则规则名之前需要加上字符串css，比如float写成cssFloat")]),t._v(" "),s("li",[t._v("该对象的属性值都是字符串，设置时必须包括单位，但是不含规则结尾的分号")])]),t._v(" "),s("h4",{attrs:{id:"css-模块的侦测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-模块的侦测"}},[t._v("#")]),t._v(" CSS 模块的侦测")]),t._v(" "),s("p",[t._v("有时候，需要知道当前浏览器是否支持某个模块。一个比较普遍适用的方法是，判断元素的style对象的某个属性值是否为字符串。")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maxWidth'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maximumWidth'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined; 不支持")]),t._v("\n")])])]),s("p",[t._v("一个兼容不同浏览器前缀的函数")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPropertySupported")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prefixes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Moz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Webkit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ms'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Khtml'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prefProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" prefixes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefixes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" prefProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPropertySupported")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-clip'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"css-supports-display-table-cell-是否支持某一规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-supports-display-table-cell-是否支持某一规则"}},[t._v("#")]),t._v(" CSS.supports('display: table-cell') 是否支持某一规则")]),t._v(" "),s("h4",{attrs:{id:"window-getcomputedstyle-用来返回浏览器计算后得到的最终全部规则。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-getcomputedstyle-用来返回浏览器计算后得到的最终全部规则。"}},[t._v("#")]),t._v(" window.getComputedStyle() 用来返回浏览器计算后得到的最终全部规则。")]),t._v(" "),s("p",[t._v("它接受一个节点对象作为参数，返回一个 CSSStyleDeclaration 实例，包含了指定节点的各种CSS规则叠加后的最终样式信息。")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("documment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':before'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还可以接受第二个参数，表示当前元素的伪元素（比如:before、:after、:first-line、:first-letter等） ")]),t._v("\n")])])]),s("h3",{attrs:{id:"mutation-observer-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutation-observer-api"}},[t._v("#")]),t._v(" Mutation Observer API")]),t._v(" "),s("p",[t._v("Mutation Observer API 用来监视 DOM 变动。DOM 的任何变动，比如节点的增减、属性的变动、文本内容的变动，这个 API 都可以得到通知。")]),t._v(" "),s("p",[t._v("Mutation Observer 有以下特点。")]),t._v(" "),s("p",[t._v("它等待所有脚本任务完成后，才会运行（即异步触发方式）。\n它把 DOM 变动记录封装成一个数组进行处理，而不是一条条个别处理 DOM 变动。\n它既可以观察 DOM 的所有类型变动，也可以指定只观察某一类变动。")]),t._v(" "),s("h2",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("h3",{attrs:{id:"eventtarget-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventtarget-接口"}},[t._v("#")]),t._v(" EventTarget 接口")]),t._v(" "),s("p",[t._v("事件的本质是程序各个组成部分之间的一种通信方式，也是异步编程的一种实现。")]),t._v(" "),s("p",[t._v("DOM 事件的操作（监听和触发）都定义在 EventTarget 接口，所有节点都部署了这个接口。提供了三个实例方法。")]),t._v(" "),s("h4",{attrs:{id:"eventtarget-addeventlistener-type-listener-usecapture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventtarget-addeventlistener-type-listener-usecapture"}},[t._v("#")]),t._v(" EventTarget.addEventListener(type, listener[, useCapture])")]),t._v(" "),s("ul",[s("li",[t._v("type: 事件名称，大小写敏感")]),t._v(" "),s("li",[t._v("listener： 监听函数")]),t._v(" "),s("li",[t._v("useCapture：布尔值，默认为false 在冒泡阶段触发； true 在捕获阶段触发\n"),s("ul",[s("li",[t._v("capture：布尔值，表示该事件是否在捕获阶段触发监听函数。")]),t._v(" "),s("li",[t._v("once：布尔值，表示监听函数是否只触发一次，然后就自动移除。")]),t._v(" "),s("li",[t._v("passive：布尔值，表示监听函数不会调用事件的preventDefault方法。如果监听函数调用了，浏览器将忽略这个要求，并在监控台输出一行警告。")])])])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("addEventListener方法可以为针对当前对象的同一个事件，添加多个不同的监听函数。这些函数按照添加顺序触发，即先添加先触发。")]),t._v(" "),s("li",[t._v("如果为同一个事件多次添加同一个监听函数，该函数只会执行一次，多余的添加将自动被去除")])]),t._v(" "),s("h4",{attrs:{id:"eventtarget-removeeventlistener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventtarget-removeeventlistener"}},[t._v("#")]),t._v(" EventTarget.removeEventListener()")]),t._v(" "),s("p",[t._v("参数，与addEventListener方法完全一致，才能移除。")]),t._v(" "),s("h4",{attrs:{id:"eventtarget-dispatchevent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventtarget-dispatchevent"}},[t._v("#")]),t._v(" EventTarget.dispatchEvent()")]),t._v(" "),s("p",[t._v("在当前节点上触发指定事件，从而触发监听函数的执行。自定义事件用起来。")]),t._v(" "),s("p",[t._v("该方法返回一个布尔值，只要有一个监听函数调用了Event.preventDefault()，则返回值为false，否则为true。")]),t._v(" "),s("p",[t._v("dispatchEvent方法的参数是一个Event对象的实例。")]),t._v(" "),s("p",[t._v("根据dispatchEvent方法的返回值，判断事件是否被取消了。")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" canceled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("cb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canceled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'事件取消'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'事件未取消'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"事件模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件模型"}},[t._v("#")]),t._v(" 事件模型")]),t._v(" "),s("p",[t._v("浏览器的事件模型，就是通过监听函数（listener）对事件做出反应。这是事件驱动编程模式（event-driven）的主要编程方式。")]),t._v(" "),s("p",[t._v("DOM 0级的监听方式：")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("DOM 2级的监听方式：")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("DOM0，缺点在于同一事件只能定义一个监听函数，多次定义后面覆盖前面的。")]),t._v(" "),s("p",[t._v("DOM2（DOM1没有规定事件相关规范），是推荐的优点如下：")]),t._v(" "),s("ul",[s("li",[t._v("同一事件可以添加多个监听函数")]),t._v(" "),s("li",[t._v("能够指定在冒泡还是捕获阶段触发（先捕获，再冒泡）")]),t._v(" "),s("li",[t._v("除了 DOM 节点，其他对象（比如window、XMLHttpRequest等）也有这个接口，它等于是整个 JavaScript 统一的监听函数接口。")])]),t._v(" "),s("h4",{attrs:{id:"this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this指向"}},[t._v("#")]),t._v(" this指向")]),t._v(" "),s("p",[t._v("监听函数内部的this指向触发事件的那个元素节点。")]),t._v(" "),s("h4",{attrs:{id:"事件的传播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的传播"}},[t._v("#")]),t._v(" 事件的传播")]),t._v(" "),s("ul",[s("li",[t._v("第一阶段：从window对象传导到目标节点（上层传到底层），称为“捕获阶段”（capture phase）。")]),t._v(" "),s("li",[t._v("第二阶段：在目标节点(点击触发最底层的那个节点)上触发，称为“目标阶段”（target phase）。")]),t._v(" "),s("li",[t._v("第三阶段：从目标节点传导回window对象（从底层传回上层），称为“冒泡阶段”（bubbling phase）。")])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html 结构")]),t._v("\nhtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" p\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'P'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbtn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("捕获阶段 window>html>body>p")]),t._v(" "),s("li",[t._v("目标阶段 p（会触发两次）")]),t._v(" "),s("li",[t._v("冒泡阶段 p>body>html>window")])]),t._v(" "),s("h4",{attrs:{id:"事件的代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的代理"}},[t._v("#")]),t._v(" 事件的代理")]),t._v(" "),s("p",[t._v("由于事件会冒泡到父节点上，因此可以把子节点的监听函数定义在父节点上，由父节点同一处理子元素的事件。这种方法称之为代理。")]),t._v(" "),s("p",[t._v("好处有2：1. 代码更简洁，2. 不用给新增加的子元素绑定事件")]),t._v(" "),s("p",[t._v("阻止事件传播")]),t._v(" "),s("ul",[s("li",[t._v("event.stopPropagation  阻止事件传播")]),t._v(" "),s("li",[t._v("event.stopImmediatePropagation  不再触发后面所有click的监听函数")])]),t._v(" "),s("h3",{attrs:{id:"event-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-对象"}},[t._v("#")]),t._v(" Event 对象")]),t._v(" "),s("p",[t._v("事件发生后会产生一个事件对象作为参数传递给监听函数，所有事件对象都是原生 Event 的实例。")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成一个事件对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type 是事件名，是个字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options 事件对象的配置项，是可选项。它有两个属性，配置如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bubbles"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示事件对象是否冒泡，默认false 不冒泡只能在捕获阶段触发")]),t._v("\n    cancelable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件是否可以被Event.preventDefault()取消，默认false 不可以 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"实例属性-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例属性-2"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("实例属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Event.bubbles")]),t._v(" "),s("td",[t._v("返回布尔值，判断事件是否可以冒泡")])]),t._v(" "),s("tr",[s("td",[t._v("Event.eventPhase")]),t._v(" "),s("td",[t._v("返回一个数字，表示目前处于哪个阶段："),s("br"),t._v("0 -> 事件没有发生"),s("br"),t._v("1 -> 捕获阶段"),s("br"),t._v("2 -> 目标节点"),s("br"),t._v("3 -> 冒泡阶段")])]),t._v(" "),s("tr",[s("td",[t._v("Event.cancelable")]),t._v(" "),s("td",[t._v("事件是否可以取消")])]),t._v(" "),s("tr",[s("td",[t._v("Event.cancelBubble")]),t._v(" "),s("td",[t._v("属性是一个布尔值，如果设为true，相当于执行Event.stopPropagation()，可以阻止事件的传播")])]),t._v(" "),s("tr",[s("td",[t._v("Event.defaultPrevented")]),t._v(" "),s("td",[t._v("返回一个布尔值，表示该事件是否调用过Event.preventDefault方法")])]),t._v(" "),s("tr",[s("td",[t._v("Event.cancelable")]),t._v(" "),s("td",[t._v("返回一个布尔值，表示该事件是否调用过")])]),t._v(" "),s("tr",[s("td",[t._v("Event.target")]),t._v(" "),s("td",[t._v("事件的原始触发节点（比如click，就是直接点击的哪个最底层的节点）")])]),t._v(" "),s("tr",[s("td",[t._v("Event.currentTarget")]),t._v(" "),s("td",[t._v("事件当前正在通过的节点，随着事件捕获或者冒泡传播属性值会变化，事件对象中的 this 指向 事件的currentTarget属性")])]),t._v(" "),s("tr",[s("td",[t._v("Event.type")]),t._v(" "),s("td",[t._v("事件的属性类型")])]),t._v(" "),s("tr",[s("td",[t._v("Event.timeStamp")]),t._v(" "),s("td",[t._v("返回一个毫秒时间戳，表示事件发生的时间。它是相对于网页加载成功开始计算的")])]),t._v(" "),s("tr",[s("td",[t._v("Event.isTrusted")]),t._v(" "),s("td",[t._v("返回一个布尔值，表示该事件是否由真实的用户行为产生。Event构造函数生成的事件返回false，因为是脚本产生的")])]),t._v(" "),s("tr",[s("td",[t._v("Event.detail")]),t._v(" "),s("td",[t._v("返回一个数值表示事件的某种信息，具体和事件类型有关，比如click 1单机 2双击")])])])]),t._v(" "),s("h4",{attrs:{id:"实例方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法-2"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("实例方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Event.preventDefault()")]),t._v(" "),s("td",[t._v("只是阻止当前元素的默认事件，不会阻止传播；"),s("br"),t._v("该方法生效的前提是，事件对象的cancelable属性为true")])]),t._v(" "),s("tr",[s("td",[t._v("Event.stopPropagation()")]),t._v(" "),s("td",[t._v("阻止当前事件的继续传播，但不会阻止当前节点其他事件监听函数")])]),t._v(" "),s("tr",[s("td",[t._v("Event.stopImmediatePropagation()")]),t._v(" "),s("td",[t._v("阻止当前事件的继续传播，同时阻止当前节点在其之后的事件监听")])]),t._v(" "),s("tr",[s("td",[t._v("Event.composedPath()")]),t._v(" "),s("td",[t._v("返回一个数组，成员是最底层节点和依次经过的所有上层节点，比如['button',...,'body', 'html', 'window']")])])])]),t._v(" "),s("p",[t._v("事件太多了，业务中用到再查，建议参考阮一峰老师的教程 "),s("a",{attrs:{href:"https://wangdoc.com/javascript/events/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("事件一览表"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"数表事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数表事件"}},[t._v("#")]),t._v(" 数表事件")]),t._v(" "),s("h3",{attrs:{id:"键盘事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件"}},[t._v("#")]),t._v(" 键盘事件")]),t._v(" "),s("h3",{attrs:{id:"进度事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进度事件"}},[t._v("#")]),t._v(" 进度事件")]),t._v(" "),s("h3",{attrs:{id:"表单事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单事件"}},[t._v("#")]),t._v(" 表单事件")]),t._v(" "),s("h3",{attrs:{id:"触摸事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触摸事件"}},[t._v("#")]),t._v(" 触摸事件")]),t._v(" "),s("h3",{attrs:{id:"拖拉事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拖拉事件"}},[t._v("#")]),t._v(" 拖拉事件")]),t._v(" "),s("h3",{attrs:{id:"其他事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他事件"}},[t._v("#")]),t._v(" 其他事件")]),t._v(" "),s("ul",[s("li",[t._v("资源事件\n"),s("ul",[s("li",[t._v("beforeunload 事件")]),t._v(" "),s("li",[t._v("unload 事件")]),t._v(" "),s("li",[t._v("load 事件，error 事件")])])]),t._v(" "),s("li",[t._v("session 历史事件\n"),s("ul",[s("li",[t._v("pageshow 事件，pagehide 事件")]),t._v(" "),s("li",[t._v("popstate 事件")]),t._v(" "),s("li",[t._v("hashchange 事件")])])]),t._v(" "),s("li",[t._v("网页状态事件\n"),s("ul",[s("li",[t._v("DOMContentLoaded 事件 ： DOM 一解析完毕就会在document对象上触发 DOMContentLoaded 事件")]),t._v(" "),s("li",[t._v("readystatechange 事件")])])]),t._v(" "),s("li",[t._v("窗口事件\n"),s("ul",[s("li",[t._v("scroll 事件")]),t._v(" "),s("li",[t._v("resize 事件")]),t._v(" "),s("li",[t._v("fullscreenchange 事件，fullscreenerror 事件")])])]),t._v(" "),s("li",[t._v("剪贴板事件")]),t._v(" "),s("li",[t._v("焦点事件")]),t._v(" "),s("li",[t._v("CustomEvent 接口 用于自定义事件传递数据")])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'detail'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eventHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),s("p",[t._v("浏览器内置了 JavaScript 引擎，并且提供各种接口，让 JavaScript 脚本可以控制浏览器的各种功能。")]),t._v(" "),s("h3",{attrs:{id:"浏览器环境概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器环境概述"}},[t._v("#")]),t._v(" 浏览器环境概述")]),t._v(" "),s("h4",{attrs:{id:"javascript-嵌入页面的4中方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-嵌入页面的4中方法"}},[t._v("#")]),t._v(" JavaScript 嵌入页面的4中方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("<script>")]),t._v("元素直接嵌入代码。")]),t._v(" "),s("li",[s("code",[t._v("<script>")]),t._v("标签加载外部脚本")]),t._v(" "),s("li",[t._v("事件属性")]),t._v(" "),s("li",[t._v("URL 协议")])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a href"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascript: new Date().toLocaleTimeString();void 0;"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("点击"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// javascript:协议的常见用途是书签脚本 Bookmarklet")]),t._v("\n")])])]),s("h4",{attrs:{id:"script-元素的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-元素的工作原理"}},[t._v("#")]),t._v(" "),s("code",[t._v("<script>")]),t._v(" 元素的工作原理")]),t._v(" "),s("ol",[s("li",[t._v("一边下载HTML同时开始解析")]),t._v(" "),s("li",[t._v("解析过程中遇到 "),s("code",[t._v("<script>")]),t._v(" 元素，就暂停解析，把网页渲染控制权交给 JavaScript 引擎。")]),t._v(" "),s("li",[t._v("如果"),s("code",[t._v("<script>")]),t._v("引用了外部脚本就去下载，否则开始执行脚本")]),t._v(" "),s("li",[t._v("执行完毕脚本，JavaScript 引擎将控制权交给渲染引擎，继续解析html")])]),t._v(" "),s("p",[t._v("so, 基本资源放置在body是比较好的方法，另外为了尽快执行脚本 使用 DOMContentLoaded 事件回调，因为在DOM渲染已结束就触发")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DOMContentLoaded'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个js可能并行加载，尽管可能b先加载完，依然需要等待a加载结束先执行a再执行b")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 另外，同域名请求打开tcp连接数量有限制，而请求不同域名没有限制")]),t._v("\n")])])]),s("p",[t._v("解决阻塞加载的两个属性：defer & async")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a.js"')]),t._v(" defer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b.js"')]),t._v(" defer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器在解析html过程中发现带有defer属性的`<script>`元素，继续向下解析同时下载脚本，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 完成解析后开始执行加载的脚本，在 DOMContentLoaded 事件触发前加载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不影响a，b执行的顺序")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a.js"')]),t._v(" async"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b.js"')]),t._v(" async"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不同的是，谁先下载完，先执行谁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相比 defer 第一个文件可能执行的更早， 但是不保证执行顺序")]),t._v("\n")])])]),s("p",[t._v("加载协议：")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认http协议下载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定https下载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"//example.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据页面本身的协议决定加载协议")]),t._v("\n")])])]),s("p",[t._v("渲染引擎：")]),t._v(" "),s("ul",[s("li",[t._v("不同浏览器使用不用引擎")]),t._v(" "),s("li",[t._v("Firefox：Gecko 引擎")]),t._v(" "),s("li",[t._v("Safari：WebKit 引擎")]),t._v(" "),s("li",[t._v("Chrome：Blink 引擎")]),t._v(" "),s("li",[t._v("IE: Trident 引擎")]),t._v(" "),s("li",[t._v("Edge: EdgeHTML 引擎")])]),t._v(" "),s("p",[t._v("渲染有4个阶段，")]),t._v(" "),s("ol",[s("li",[t._v("解析代码： HTML -> DOM，CSS -> CSSOM")]),t._v(" "),s("li",[t._v("对象合成：将DOM 和 CSSOM 合成一颗渲染树")]),t._v(" "),s("li",[t._v("flow：计算布局，各个节点大小位置等")]),t._v(" "),s("li",[t._v("paint：绘制")])]),t._v(" "),s("p",[t._v("重排（reflow）：渲染引擎计算元素位置和大小时会引起重排")]),t._v(" "),s("p",[t._v("重绘（repaint）：将重排的结果或者元素颜色等信息都会引起重新渲染，重排必然重绘")]),t._v(" "),s("p",[t._v("JavaScript 引擎：在 eventLoop 详细解释")]),t._v(" "),s("h3",{attrs:{id:"window-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-对象"}},[t._v("#")]),t._v(" window 对象")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("概述")])]),t._v(" "),s("li",[s("p",[t._v("window 对象的属性")]),t._v(" "),s("ol",[s("li",[t._v("window.name")]),t._v(" "),s("li",[t._v("window.closed，window.opener")]),t._v(" "),s("li",[t._v("window.self，window.window")]),t._v(" "),s("li",[t._v("window.frames，window.length")]),t._v(" "),s("li",[t._v("window.frameElement")]),t._v(" "),s("li",[t._v("window.top，window.parent")]),t._v(" "),s("li",[t._v("window.status")]),t._v(" "),s("li",[t._v("window.devicePixelRatio")]),t._v(" "),s("li",[t._v("位置大小属性")]),t._v(" "),s("li",[t._v("组件属性")]),t._v(" "),s("li",[t._v("全局对象属性")])])]),t._v(" "),s("li",[s("p",[t._v("window.isSecureContext")]),t._v(" "),s("ol",[s("li",[t._v("window 对象的方法")]),t._v(" "),s("li",[t._v("window.alert()，window.prompt()，window.confirm()")]),t._v(" "),s("li",[t._v("window.open(), window.close()，window.stop()")]),t._v(" "),s("li",[t._v("window.moveTo()，window.moveBy()")]),t._v(" "),s("li",[t._v("window.resizeTo()，window.resizeBy()")]),t._v(" "),s("li",[t._v("window.scrollTo()，window.scroll()，window.scrollBy()")])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    behavior"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smooth'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 丝滑细腻的滚动")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果不是要滚动整个文档，而是要滚动某个元素")]),t._v("\n  Element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollTop\n  Element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollLeft\n  Element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollIntoView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",[s("li",[t._v("window.print()")]),t._v(" "),s("li",[t._v("window.focus()，window.blur()")]),t._v(" "),s("li",[t._v("window.getSelection()")]),t._v(" "),s("li",[t._v("window.getComputedStyle()，window.matchMedia()")]),t._v(" "),s("li",[t._v("window.requestAnimationFrame()")]),t._v(" "),s("li",[t._v("window.requestIdleCallback()")])])]),t._v(" "),s("li",[s("p",[t._v("事件")]),t._v(" "),s("ol",[s("li",[t._v("load 事件和 onload 属性")]),t._v(" "),s("li",[t._v("error 事件和 onerror 属性")]),t._v(" "),s("li",[t._v("window 对象的事件监听属性")])])]),t._v(" "),s("li",[s("p",[t._v("多窗口操作")]),t._v(" "),s("ol",[s("li",[t._v("窗口的引用")]),t._v(" "),s("li",[t._v("iframe 元素")]),t._v(" "),s("li",[t._v("window.frames 属性")])])])]),t._v(" "),s("h3",{attrs:{id:"navigator-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#navigator-对象"}},[t._v("#")]),t._v(" Navigator 对象")]),t._v(" "),s("p",[t._v("属性：")]),t._v(" "),s("ul",[s("li",[t._v("Navigator.userAgent：最长用了 ua")]),t._v(" "),s("li",[t._v("Navigator.plugins")]),t._v(" "),s("li",[t._v("Navigator.platform ： 返回用户的操作系统信息")]),t._v(" "),s("li",[t._v("Navigator.onLine ： 是否联网")]),t._v(" "),s("li",[t._v("Navigator.language，Navigator.languages")]),t._v(" "),s("li",[t._v("Navigator.geolocation")]),t._v(" "),s("li",[t._v("Navigator.cookieEnabled")])]),t._v(" "),s("p",[t._v("方法：")]),t._v(" "),s("ul",[s("li",[t._v("Navigator.javaEnabled()：否能运行 Java Applet 小程序")]),t._v(" "),s("li",[t._v("Navigator.sendBeacon()：用于向服务器异步发送数据")])]),t._v(" "),s("h3",{attrs:{id:"screen-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#screen-对象"}},[t._v("#")]),t._v(" Screen 对象")]),t._v(" "),s("ul",[s("li",[t._v("Screen.height：浏览器窗口所在的屏幕的高度（单位像素）。除非调整显示器的分辨率，否则这个值可以看作常量，不会发生变化。显示器的分辨率与浏览器设置无关，缩放网页并不会改变分辨率。")]),t._v(" "),s("li",[t._v("Screen.width：浏览器窗口所在的屏幕的宽度（单位像素）。")]),t._v(" "),s("li",[t._v("Screen.availHeight：浏览器窗口可用的屏幕高度（单位像素）。因为部分空间可能不可用，比如系统的任务栏或者 Mac 系统屏幕底部的 Dock 区，这个属性等于height减去那些被系统组件的高度。")]),t._v(" "),s("li",[t._v("Screen.availWidth：浏览器窗口可用的屏幕宽度（单位像素）。")]),t._v(" "),s("li",[t._v("Screen.pixelDepth：整数，表示屏幕的色彩位数，比如24表示屏幕提供24位色彩。")]),t._v(" "),s("li",[t._v("Screen.colorDepth：Screen.pixelDepth的别名。严格地说，colorDepth 表示应用程序的颜色深度，pixelDepth 表示屏幕的颜色深度，绝大多数情况下，它们都是同一件事。")]),t._v(" "),s("li",[t._v("Screen.orientation：返回一个对象，表示屏幕的方向。该对象的type属性是一个字符串，表示屏幕的具体方向，landscape-primary表示横放，landscape-secondary表示颠倒的横放，portrait-primary表示竖放，portrait-secondary。")])]),t._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("p",[t._v("cookie 是前后端通信http协议的一部分，每次请求都会携带cookie。")]),t._v(" "),s("h3",{attrs:{id:"xmlhttprequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[t._v("#")]),t._v(" XMLHttpRequest")]),t._v(" "),s("p",[t._v("用脚本发起的通信，就可以叫Ajax。创建一个Ajax：")]),t._v(" "),s("ol",[s("li",[t._v("创建一个 XMLHttpRequest 实例")]),t._v(" "),s("li",[t._v("发出http请求")]),t._v(" "),s("li",[t._v("接收服务器传回来的数据")]),t._v(" "),s("li",[t._v("更新网页数据")])]),t._v(" "),s("p",[t._v("与Ajax出生时不同的是，JSON格式已经替代了XML，除了HTTP请求支持file、ftp等")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一旦实例的状态发生变化，就会调用监听函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通信成功时，状态值为4")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4，已接受或失败")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 状态码")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回的数据")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/endpoint'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// open方法指定建立http连接的细节")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际发送请求")]),t._v("\n")])])]),s("p",[t._v("Ajax 只能向同源（协议、域名、端口都相同）网址发出请求，如果发出跨域请求，就会报错")]),t._v(" "),s("h3",{attrs:{id:"xmlhttprequest-withcredentials"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-withcredentials"}},[t._v("#")]),t._v(" XMLHttpRequest.withCredentials")]),t._v(" "),s("p",[t._v("跨域请求时，用户信息是否包含在请求中。默认false。\n如果跨域需要设置 withCredentials 为true。\n为了让这个属性生效，服务器必须显式返回Access-Control-Allow-Credentials这个头信息。")]),t._v(" "),s("h3",{attrs:{id:"cookie-storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-storage"}},[t._v("#")]),t._v(" cookie storage")]),t._v(" "),s("h3",{attrs:{id:"location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" location")]),t._v(" "),s("p",[t._v("Location对象是浏览器提供的原生对象，提供 URL 相关的信息和操作方法。通过window.location和document.location属性，可以拿到这个对象。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Location.href")]),t._v(" "),s("td",[t._v("整个 URL")])]),t._v(" "),s("tr",[s("td",[t._v("Location.protocol")]),t._v(" "),s("td",[t._v("当前 URL 的协议，包括冒号（:）")])]),t._v(" "),s("tr",[s("td",[t._v("Location.host")]),t._v(" "),s("td",[t._v("主机。如果端口不是协议默认的80和433，则还会包括冒号（:）和端口")])]),t._v(" "),s("tr",[s("td",[t._v("Location.hostname")]),t._v(" "),s("td",[t._v("主机名，不包括端口")])]),t._v(" "),s("tr",[s("td",[t._v("Location.port")]),t._v(" "),s("td",[t._v("端口号")])]),t._v(" "),s("tr",[s("td",[t._v("Location.pathname")]),t._v(" "),s("td",[t._v("URL 的路径部分，从根路径/开始")])]),t._v(" "),s("tr",[s("td",[t._v("Location.search")]),t._v(" "),s("td",[t._v("查询字符串部分，从问号?开始")])]),t._v(" "),s("tr",[s("td",[t._v("Location.hash")]),t._v(" "),s("td",[t._v("片段字符串部分，从#开始")])]),t._v(" "),s("tr",[s("td",[t._v("Location.username")]),t._v(" "),s("td",[t._v("域名前面的用户名")])]),t._v(" "),s("tr",[s("td",[t._v("Location.password")]),t._v(" "),s("td",[t._v("域名前面的密码")])]),t._v(" "),s("tr",[s("td",[t._v("Location.origin")]),t._v(" "),s("td",[t._v("URL 的协议、主机名和端口")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("document..location.assign(url)")]),t._v(" "),s("td",[t._v("使得浏览器立刻跳转到新的 URL")])]),t._v(" "),s("tr",[s("td",[t._v("Location.replace(url)")]),t._v(" "),s("td",[t._v("使得浏览器立刻跳转到新的 URL，替换掉当前页面的history记录")])]),t._v(" "),s("tr",[s("td",[t._v("Location.reload(Boolean)")]),t._v(" "),s("td",[t._v("刷新，默认true向服务器请求，false 从本地缓存加载")])]),t._v(" "),s("tr",[s("td",[t._v("Location.toString()")]),t._v(" "),s("td",[t._v("相当于 Location.href 属性")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("编码解析")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("encodeURI(完整的url)")]),t._v(" "),s("td",[t._v("将元字符和语义字符之外的字符，都进行转义")])]),t._v(" "),s("tr",[s("td",[t._v("encodeURIComponent(URL片段)")]),t._v(" "),s("td",[t._v("连元字符一起转义了，用来转义参数而不能整个url")])]),t._v(" "),s("tr",[s("td",[t._v("decodeURI()")]),t._v(" "),s("td",[t._v("解码 encodeURI 的转码")])]),t._v(" "),s("tr",[s("td",[t._v("decodeURIComponent()")]),t._v(" "),s("td",[t._v("解码 encodeURIComponent 的转码")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("URL 元字符：分号（;），逗号（,），斜杠（/），问号（?），冒号（:），at（@），&，等号（=），加号（+），美元符号（$），井号（#）")])]),t._v(" "),s("blockquote",[s("p",[t._v("语义字符：a-z，A-Z，0-9，连词号（-），下划线（_），点（.），感叹号（!），波浪线（~），星号（*），单引号（'），圆括号（()）")])]),t._v(" "),s("p",[t._v("除了以上字符，其他字符出现在 URL 之中都必须转义")]),t._v(" "),s("h3",{attrs:{id:"url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),s("p",[t._v("URL接口是一个构造函数，浏览器原生提供，可以用来构造、解析和编码 URL。一般情况下，通过window.URL可以拿到这个构造函数")]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://example.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nurl1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://example.com/index.html"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page2.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://example.com/page1.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nurl2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://example.com/page2.html"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'..'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://example.com/a/b.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nurl3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://example.com/"')]),t._v("\n")])])]),s("h2",{attrs:{id:"存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[t._v("#")]),t._v(" 存储")]),t._v(" "),s("p",[t._v("sessionStorage\nlocationStorage")]),t._v(" "),s("h2",{attrs:{id:"多媒体元素接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多媒体元素接口"}},[t._v("#")]),t._v(" 多媒体元素接口")])])}),[],!1,null,null,null);a.default=n.exports}}]);